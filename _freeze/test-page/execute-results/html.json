{
  "hash": "21081b18e1797d921ed29acb4d02d745",
  "result": {
    "markdown": "# Test\n\nThis is just a page for me to test stuff.\n\n\n::: {.cell}\n\n:::\n\n```{ojs}\nPlot.plot({\n  marks: [\n    Plot.line(d3.range(0, 10, 0.01),\n      {\n        x: (x) => x,\n        y: (x) => jStat.chisquare.pdf(x, df1),\n        strokeWidth: 3,\n        stroke: \"steelblue\"\n      }\n    ),\n    Plot.ruleX([0]),\n    Plot.ruleY([0]),\n  ],\n  x: {\n    domain: [0, 10],\n    label: \"Chi-squared Statistic\"\n  },\n  y: { \n    domain: [0, .3], \n    label: \"Density\"\n  },\n    caption: \"The Chi-squared Sampling Distribution\"\n})\n\nviewof df1 = Inputs.range(\n[1, 10],\n{value: 3, step: 1, label: \"Degrees of Freedom (df):\"}\n)\n```\n\n```{ojs}\nfunction tDemo(df) {\n    var x = d3.range(-4, 4.005, 0.01);\n    var result = [];\n    x.forEach((val, i) => {\n        result.push({\"x\": val, \"y\": jStat.normal.pdf(val, 0, 1), \"lab\": \"Standard Normal\"});\n        result.push({\"x\": val, \"y\": jStat.studentt.pdf(val, df), \"lab\": \"t distribution\"});\n    })\n    return result;\n}\n\nPlot.plot({\n  marks: [\n    Plot.line(tDemo(df2),\n      {\n        x: \"x\", \n        y: \"y\",\n        stroke: \"lab\",\n        strokeWidth: 3\n      }\n    ),\n    Plot.ruleY([0]),\n    Plot.ruleX([-4])\n  ],\n    x: { label: \"t statistic\" },\n    y: {domain: [0, .41],\n    label: \"Density\"},\n    color: {\n        legend: true\n    },\n    caption: \"Student's t Distribution\"\n})\n\nviewof df2 = Inputs.range(\n[1, 100],\n{value: 3, step: 1, label: \"Degrees of Freedom (df):\"}\n)\n```\n\n```{ojs}\nviewof mu = Inputs.number([-Infinity, Infinity], {label: tex`\\text{Mean }\\mu`, value: 0})\n\nviewof sigma = Inputs.number([-Infinity, Infinity], {label: tex`\\text{SD }\\sigma`, value: 1})\n\nviewof x1 = Inputs.number([-Infinity, Infinity], {label: tex`\\text{Value }x_1`, value: 0, step: 0.1})\n\nviewof x2 = Inputs.number([-Infinity, Infinity], {label: tex`\\text{Value }x_2`, value: 0, disabled: area != \"P(x1<X<x2)\", step: 0.1})\n\nviewof area = Inputs.radio([\"P(X<x1)\",\"P(X>x1)\",\"P(x1<X<x2)\"], {label: \"Area\", value: \"P(X<x1)\"})\n\nfunction areaDemo(mu, sigma, x1, x2) {\n    var x = d3.range(x1, x2 + 0.001, 0.01);\n    var result = [];\n    x.forEach((val, i) => {\n        result.push({\"x\": val, \"y\": jStat.normal.pdf(val, 0, 1), \"lab\": \"Standard Normal\"});\n        result.push({\"x\": val, \"y\": jStat.studentt.pdf(val, df2), \"lab\": \"t distribution\"});\n    })\n    return result;\n}\n\nPlot.plot({\n  marks: [\n    Plot.line(d3.range(mu - 4 * sigma, mu + 4 * sigma + 0.001, 0.01),\n      {\n        x: (x) => x,\n        y: (x) => jStat.normal.pdf(x, mu, sigma),\n        strokeWidth: 3,\n        stroke: \"steelblue\"\n      }),\n    Plot.areaY(d3.range(((area != \"P(X<x1)\") ? x1 : mu - 4 * sigma), ((area == \"P(X<x1)\") ? x1 : ((area == \"P(X>x1)\") ? mu + 4 * sigma : x2)) + 0.001, 0.01),\n      {\n        x: (x) => x,\n        y: (x) => jStat.normal.pdf(x, mu, sigma)\n      }),\n    Plot.ruleY([0]),\n    Plot.ruleX([ mu  - 4 * sigma])\n  ]},{\n    x: {domain: [mu - 4 * sigma, mu + 4 * sigma]},\n    caption: tex`\\text{Distribution of } N(\\mu, \\sigma)`\n})\n\n\n\n\n\nmd`\n${((area == \"P(X<x1)\") ? `${tex`P(X<${x1}) = P(Z < z) = \\frac{x_1 - \\mu}{\\sigma} = \\frac{${x1} - ${mu}}{${sigma}} = ${(x1 - mu) / sigma}`}`: `${tex`P(X<${x1}) = P(Z < z) = \\frac{x_1 - \\mu}{\\sigma} = \\frac{${x1} - ${mu}}{${sigma}} = ${(x1 - mu) / sigma}`}`)}\n`\n```\n\n\nThe probability of $P(X<x)$ = `obj ((x1 - mu)/sigma`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}