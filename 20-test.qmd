# Test

This is just a page for me to test stuff.

```{r}
library(tidyverse)
```

```{ojs Chisquare DF Demo}
Plot.plot({
  marks: [
    Plot.line(d3.range(0, 10, 0.01),
      {
        x: (x) => x,
        y: (x) => jStat.chisquare.pdf(x, df1),
        strokeWidth: 3,
        stroke: "steelblue"
      }
    ),
    Plot.ruleX([0]),
    Plot.ruleY([0]),
  ],
  x: {
    domain: [0, 10],
    label: "Chi-squared Statistic"
  },
  y: { 
    domain: [0, .3], 
    label: "Density"
  },
    caption: "The Chi-squared Sampling Distribution"
})

viewof df1 = Inputs.range(
[1, 10],
{value: 3, step: 1, label: "Degrees of Freedom (df):"}
)
```

```{ojs}
function tDemo(df) {
    var x = d3.range(-4, 4.005, 0.01);
    var result = [];
    x.forEach((val, i) => {
        result.push({"x": val, "y": jStat.normal.pdf(val, 0, 1), "lab": "Standard Normal"});
        result.push({"x": val, "y": jStat.studentt.pdf(val, df), "lab": "t distribution"});
    })
    return result;
}

Plot.plot({
  marks: [
    Plot.line(tDemo(df2),
      {
        x: "x", 
        y: "y",
        stroke: "lab",
        strokeWidth: 3
      }
    ),
    Plot.ruleY([0]),
    Plot.ruleX([-4])
  ],
    x: { label: "t statistic" },
    y: {domain: [0, .41],
    label: "Density"},
    color: {
        legend: true
    },
    caption: "Student's t Distribution"
})

viewof df2 = Inputs.range(
[1, 100],
{value: 3, step: 1, label: "Degrees of Freedom (df):"}
)
```

```{ojs}
viewof mu = Inputs.number([-Infinity, Infinity], {label: tex`\text{Mean }\mu`, value: 0})

viewof sigma = Inputs.number([-Infinity, Infinity], {label: tex`\text{SD }\sigma`, value: 1})

viewof x1 = Inputs.number([-Infinity, Infinity], {label: tex`\text{Value }x_1`, value: 0})

viewof x2 = Inputs.number([-Infinity, Infinity], {label: tex`\text{Value }x_2`, value: 0, disabled: area != "P(x1<X<x2)"})

viewof area = Inputs.radio(["P(X<x1)","P(X>x1)","P(x1<X<x2)"], {label: "Area", value: "P(X<x1)"})

function areaDemo(mu, sigma, x1, x2) {
    var x = d3.range(x1, x2 + 0.001, 0.01);
    var result = [];
    x.forEach((val, i) => {
        result.push({"x": val, "y": jStat.normal.pdf(val, 0, 1), "lab": "Standard Normal"});
        result.push({"x": val, "y": jStat.studentt.pdf(val, df2), "lab": "t distribution"});
    })
    return result;
}

Plot.plot({
  marks: [
    Plot.line(d3.range(mu - 4 * sigma, mu + 4 * sigma + 0.001, 0.01),
      {
        x: (x) => x,
        y: (x) => jStat.normal.pdf(x, mu, sigma),
        strokeWidth: 3,
        stroke: "steelblue"
      }),
    Plot.areaY(d3.range(x1, x2 + 0.001, 0.01),
      {
        x: (x) => x,
        y: (x) => jStat.normal.pdf(x, mu, sigma)
      }),
    Plot.ruleY([0]),
    Plot.ruleX([ mu  - 4 * sigma])
  ]},{
    caption: tex`\text{Distribution of } N(\mu, \sigma)`
})

```
